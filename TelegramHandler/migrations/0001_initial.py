# Generated by Django 2.2.4 on 2019-09-12 23:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramAccountWrapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_name', models.CharField(blank=True, max_length=256)),
                ('token', models.CharField(blank=True, max_length=32)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TelegramActiveUsersChat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User_Id', models.BigIntegerField()),
                ('Wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TelegramHandler.TelegramAccountWrapper')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramActiveUsersBroadcast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User_Id', models.BigIntegerField()),
                ('Wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TelegramHandler.TelegramAccountWrapper')),
            ],
        ),
        migrations.CreateModel(
            name='ContentDailyHodl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, max_length=256)),
                ('text', models.TextField(unique=True)),
                ('published_date', models.DateTimeField()),
                ('is_daily_hodl_content', models.BooleanField(default=True)),
                ('has_been_sent_to_telegram', models.BooleanField(default=False)),
                ('has_been_sent_to_telegram_for_unsubscribed', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'unique_together': {('text', 'published_date')},
            },
        ),
        migrations.CreateModel(
            name='ContentCoinTelegraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, max_length=256)),
                ('text', models.TextField(unique=True)),
                ('published_date', models.DateTimeField()),
                ('is_coin_telegraph_content', models.BooleanField(default=True)),
                ('has_been_sent_to_telegram', models.BooleanField(default=False)),
                ('has_been_sent_to_telegram_for_unsubscribed', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'unique_together': {('text', 'published_date')},
            },
        ),
        migrations.CreateModel(
            name='ContentCoinDesk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, max_length=256)),
                ('text', models.TextField(unique=True)),
                ('published_date', models.DateTimeField()),
                ('is_coin_desk_content', models.BooleanField(default=True)),
                ('has_been_sent_to_telegram', models.BooleanField(default=False)),
                ('has_been_sent_to_telegram_for_unsubscribed', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'unique_together': {('text', 'published_date')},
            },
        ),
        migrations.CreateModel(
            name='ContentBitcoinist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, max_length=256)),
                ('text', models.TextField(unique=True)),
                ('published_date', models.DateTimeField()),
                ('is_bitcoinist_content', models.BooleanField(default=True)),
                ('has_been_sent_to_telegram', models.BooleanField(default=False)),
                ('has_been_sent_to_telegram_for_unsubscribed', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'unique_together': {('text', 'published_date')},
            },
        ),
    ]
